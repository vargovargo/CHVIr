) %>%
mutate(days = paste0(round(days_avg, 1), "  (",round(days_min,0),", ",round(days_max,0),")"),
cases = paste0(round(cases_avg,1), "  (",round(cases_min,0),", ",round(cases_max,0),")")) %>%
select(race, wildfire, days, cases) %>%
gather(days, cases, key = "variable", value = "value") %>%
mutate(header = paste0(wildfire,"_", variable)) %>%
select(race, header, value) %>%
spread(header, value)  %>%
select(race, nonWFperiod_days, nonWFperiod_cases, WFperiod_days, WFperiod_cases) %>%
rename(Race = race,
Reference_Days = nonWFperiod_days,
Reference_Cases = nonWFperiod_cases,
Exposed_Days = WFperiod_days,
Exposed_Cases = WFperiod_cases) %>%
DT::datatable(rownames = FALSE, options = list(
columnDefs = list(list(className = 'dt-right', targets = 2:5))))
foo %>% group_by(zip, wildfire) %>%
summarise(all = sum(total),
white = sum(white),
hispanic = sum(hispanic),
black = sum(black),
native_am = sum(native_am),
asian_pi = sum(asian_pi),
other = sum(other),
days = length(svc_from_dt)) %>%
gather(all, white, black, hispanic, native_am, asian_pi, other, key = race, value = cases) %>%
group_by(race, wildfire) %>%
summarize(days_avg = mean(days),
days_min = min(days),
days_max = max(days),
cases_avg = mean(cases),
cases_min = min(cases),
cases_max = max(cases)
) %>%
mutate(days = paste0(round(days_avg, 1), "  (",round(days_min,0),", ",round(days_max,0),")"),
cases = paste0(round(cases_avg,1), "  (",round(cases_min,0),", ",round(cases_max,0),")")) %>%
select(race, wildfire, days, cases) %>%
gather(days, cases, key = "variable", value = "value") %>%
mutate(header = paste0(wildfire,"_", variable)) %>%
select(race, header, value) %>%
spread(header, value)  %>%
select(race, nonWFperiod_days, nonWFperiod_cases, WFperiod_days, WFperiod_cases) %>%
rename(Race = race,
Reference_Days = nonWFperiod_days,
Reference_Cases = nonWFperiod_cases,
Exposed_Days = WFperiod_days,
Exposed_Cases = WFperiod_cases) %>%
DT::datatable(rownames = FALSE, options = list(
columnDefs = list(list(className = 'dt-right', targets = 1:4))))
rm(list = ls())
library(tidyverse)
foo <- read.csv("~/Wildfires_kurt/PoissonTest/PoissonSandboxData.csv", stringsAsFactors = FALSE) %>%
rename(zip = bene_addr_zip,
date = svc_from_dt) %>%
gather(white,hispanic,black,native_am,asian_pi,other,missing, key = race, value = count) %>%
transform(race = factor(race, levels = c("white","hispanic","black","asian_pi","native_am","other","missing")))
zipCensus <- read.csv("~/Wildfires_kurt/raceByZip2010.csv", stringsAsFactors = FALSE)
zipCensus$Id2
zipCensus <- read.csv("~/Wildfires_kurt/raceByZip2010.csv", stringsAsFactors = FALSE)  %>%
rename(zip = Id2) %>%
gather(white,hispanic,black,native_am,asian_pi,other, key = race, value = population) %>%
transform(race = factor(race, levels = c("white","hispanic","black","asian_pi","native_am","other","missing")))
str(zipCensus)
View(zipCensus)
zipCensus <- read.csv("~/Wildfires_kurt/raceByZip2010.csv", stringsAsFactors = FALSE)  %>%
rename(zip = Id2) %>%
gather(white,hispanic,black,native_am,asian_pi,other, key = race, value = population) %>%
transform(race = factor(race, levels = c("white","hispanic","black","asian_pi","native_am","other","missing"))) %>%
filter(zip %in% unique(foo$zip))
View(zipCensus)
left_join(foo, zipCensus)
merged <- left_join(foo, zipCensus)
View(merged)
zipCensus <- read.csv("~/Wildfires_kurt/raceByZip2010.csv", stringsAsFactors = FALSE)  %>%
rename(zip = Id2) %>%
gather(white,hispanic,black,native_am,asian_pi,other, key = race, value = population) %>%
transform(race = factor(race, levels = c("white","hispanic","black","asian_pi","native_am","other","missing"))) %>%
filter(zip %in% unique(foo$zip)) %>%
select(zip, race, population)
merged <- left_join(foo, zipCensus)
View(zipCensus)
View(merged)
merged <- left_join(foo, zipCensus) %>%
mutate(dailyRate = count/(population/10000))
foo <- read.csv("~/Wildfires_kurt/PoissonTest/PoissonSandboxData.csv", stringsAsFactors = FALSE) %>%
rename(zip = bene_addr_zip,
date = svc_from_dt) %>%
gather(white,hispanic,black,native_am,asian_pi,other,missing, key = race, value = count) %>%
transform(race = factor(race, levels = c("white","hispanic","black","asian_pi","native_am","other","missing")),
date = as.Date(date))
str(foo)
mereged %>%
ggplot() +
geom_line(aes(x= date, y = dailyRate, color = race))
merged %>%
ggplot() +
geom_line(aes(x= date, y = dailyRate, color = race))
merged %>%
ggplot() +
geom_line(aes(x= date, y = dailyRate, color = race)) + coord_flip()
merged %>%
ggplot() +
geom_line(aes(x= date, y = dailyRate, color = race, group=race)) + coord_flip()
merged %>%
ggplot() +
geom_line(aes(x= date, y = pm_25, color = race, group=race)) + coord_flip()
merged %>%
ggplot() +
geom_line(aes(x= date, y = pm_25)) + coord_flip()
merged %>%
ggplot() +
geom_line(aes(x= date, y = dailyRate, color = race, group=race), stat="identity") + coord_flip()
merged %>%
ggplot() +
geom_point(aes(x= date, y = dailyRate, color = race, group=race)) + coord_flip()
merged %>%
filter(race !="other" % race !="missing") %>%
ggplot() +
geom_point(aes(x= date, y = dailyRate, color = race, group=race)) + coord_flip()
merged %>%
ggplot() +
geom_line(aes(x= date, y = pm_25)) + coord_flip()
merged %>%
group_by(race, date) %>%
summarise(rate )
str(foo)
merged %>%
filter(race !="other" % race !="missing") %>%
ggplot() +
geom_point(aes(x= date, y = dailyRate, color = race, group=race)) + coord_flip()
merged %>%
ggplot() +
geom_line(aes(x= date, y = pm_25)) + coord_flip()
merged %>%
group_by(race, date) %>%
summarise(rate )
str(foo)
merged %>%
filter(race !="other" & race !="missing") %>%
ggplot() +
geom_point(aes(x= date, y = dailyRate, color = race, group=race)) + coord_flip()
shiny::runApp('UCSDwestNile/WNVsuitability')
rm(list = ls())
library(tidyverse)
foo <- read.csv("~/Wildfires_kurt/PoissonTest/PoissonSandboxData.csv", stringsAsFactors = FALSE) %>%
rename(zip = bene_addr_zip,
date = svc_from_dt) %>%
gather(white,hispanic,black,native_am,asian_pi,other,missing, key = race, value = count) %>%
transform(race = factor(race, levels = c("white","hispanic","black","asian_pi","native_am","other","missing")),
date = as.Date(date))
zipCensus <- read.csv("~/Wildfires_kurt/raceByZip2010.csv", stringsAsFactors = FALSE)  %>%
rename(zip = Id2) %>%
gather(white,hispanic,black,native_am,asian_pi,other, key = race, value = population) %>%
transform(race = factor(race, levels = c("white","hispanic","black","asian_pi","native_am","other","missing"))) %>%
filter(zip %in% unique(foo$zip)) %>%
select(zip, race, population)
zipCensus %>% ggplot() + geom_bar(aes(x=zip, y=population, fill=race), stat="identity") +coord_flip()
merged <- left_join(foo, zipCensus) %>%
mutate(dailyRate = count/(population/10000))
# PM concentration by day
merged %>%
ggplot() +
geom_line(aes(x= date, y = pm_25)) + coord_flip()
#rates by race and day
merged %>%
filter(race !="other" & race !="missing") %>%
ggplot() +
geom_point(aes(x= date, y = dailyRate, color = race, group=race)) + coord_flip()
merged %>%
filter(race !="other" & race !="missing") %>%
ggplot() +
geom_boxplot(aes(x= date, y = dailyRate, color = race, group=zip)) +
geom_point(aes(x= date, y = pm_25/50, group=zip), size=0.1, alpha=0.2) +
facet_wrap(~ race)
merged %>%
group_by(race, date) %>%
summarise(rate )
str(foo)
merged %>%
filter(race !="other" & race !="missing") %>%
ggplot() +
geom_point(aes(x= date, y = pm_25/50, group=zip), size=0.1, alpha=0.2)
merged %>%
filter(race !="other" & race !="missing") %>%
ggplot() +
geom_boxplot(aes(x= date, y = dailyRate, color = race, group=zip)) +
geom_point(aes(x= date, y = pm_25/50, group=zip), size=0.1, alpha=0.2) +
facet_wrap(~ race)
merged %>%
filter(race !="other" & race !="missing") %>%
ggplot() +
geom_boxplot(aes(x= date, y = dailyRate, color = race, group=zip)) +
geom_point(aes(x= date, y = pm_25/50, group=zip), size=0.1, alpha=0.2) +
facet_wrap(~ race) + guides(color=FALSE)
head(merged)
merged %>%
filter(race !="other" & race !="missing") %>%
ggplot() +
geom_boxplot(aes(x= date, y = count, color = race, group=zip)) +
geom_point(aes(x= date, y = pm_25/50, group=zip), size=0.1, alpha=0.2) +
facet_wrap(~ race) + guides(color=FALSE)
rm(list = ls())
library(tidyverse)
library(data.table)
library(ggthemes)
setwd("~/Wildfires/revision/")
# install.packages("scales")
library("scales")
zipPM <- read.csv("~/Wildfires/data/zipcodePM.csv", header=T, stringsAsFactors = F)%>%
mutate(date = as.Date(date, "%m/%d/%Y"))
read.csv("~/Wildfires/data/zipcodePM.csv", header=T, stringsAsFactors = F)  %>%
mutate(date = as.Date(date, "%m/%d/%Y")) %>%
select(zipcode, date, pm25) %>%
spread(key = date,value = pm25) %>%
write.csv(zipPM, "./data/zipPMspread.csv", row.names = F)
avgPM <- zipPM %>%
group_by(date)%>%
summarise(average= mean(pm25)) %>%
filter(date >= as.Date("2007-10-11") & date < as.Date("2007-11-11"))
zipPM %>%
filter(date >= as.Date("2007-10-11") & date < as.Date("2007-11-11")) %>%
ggplot() +
geom_point(aes(x=date, y=pm25,group=zipcode),color="gray90", alpha=0.25) +
geom_line(data = avgPM, aes(x=date, y=average),  color="blue", size=1.4, alpha=0.4)+
geom_boxplot(aes(x=date, y=pm25,group=date),color="gray20", alpha=0.1) +
geom_hline(yintercept = 35, linetype="dashed", color="red", alpha=0.5, size=0.5) +
scale_x_date(labels = date_format("%m/%d")) +
theme(axis.text.x = element_text(angle=45))
merged %>%
filter(race !="other" & race !="missing") %>%
ggplot() +
geom_boxplot(aes(x= date, y = count, color = race, group=zip)) +
geom_point(aes(x= date, y = pm_25/50, group=zip), size=0.1, alpha=0.2) +
facet_wrap(~ race) + guides(color=FALSE)
merged <- left_join(foo, zipCensus) %>%
mutate(dailyRate = count/(population/10000))
rm(list = ls())
library(tidyverse)
foo <- read.csv("~/Wildfires_kurt/PoissonTest/PoissonSandboxData.csv", stringsAsFactors = FALSE) %>%
rename(zip = bene_addr_zip,
date = svc_from_dt) %>%
gather(white,hispanic,black,native_am,asian_pi,other,missing, key = race, value = count) %>%
transform(race = factor(race, levels = c("white","hispanic","black","asian_pi","native_am","other","missing")),
date = as.Date(date))
zipCensus <- read.csv("~/Wildfires_kurt/raceByZip2010.csv", stringsAsFactors = FALSE)  %>%
rename(zip = Id2) %>%
gather(white,hispanic,black,native_am,asian_pi,other, key = race, value = population) %>%
transform(race = factor(race, levels = c("white","hispanic","black","asian_pi","native_am","other","missing"))) %>%
filter(zip %in% unique(foo$zip)) %>%
select(zip, race, population)
zipCensus %>% ggplot() + geom_bar(aes(x=zip, y=population, fill=race), stat="identity") +coord_flip()
merged <- left_join(foo, zipCensus) %>%
mutate(dailyRate = count/(population/10000))
# PM concentration by day
merged %>%
ggplot() +
geom_line(aes(x= date, y = pm_25)) + coord_flip()
#rates by race and day
merged %>%
filter(race !="other" & race !="missing") %>%
ggplot() +
geom_point(aes(x= date, y = dailyRate, color = race, group=race)) + coord_flip()
merged %>%
filter(race !="other" & race !="missing") %>%
ggplot() +
geom_boxplot(aes(x= date, y = count, color = race, group=zip)) +
geom_point(aes(x= date, y = pm_25/50, group=zip), size=0.1, alpha=0.2) +
facet_wrap(~ race) + guides(color=FALSE)
filter(date >= as.Date("2007-10-11") & date < as.Date("2007-11-11"))
source('~/GitHub/wildfires/revision_figs.R', echo=TRUE)
zipPM %>%
filter(date >= as.Date("2007-10-11") & date < as.Date("2007-11-11")) %>%
ggplot() +
geom_point(aes(x=date, y=pm25,group=zipcode),color="gray90", alpha=0.25) +
geom_line(data = avgPM, aes(x=date, y=average),  color="blue", size=1.4, alpha=0.4)+
geom_boxplot(aes(x=date, y=pm25,group=date),color="gray20", alpha=0.1) +
geom_hline(yintercept = 35, linetype="dashed", color="red", alpha=0.5, size=0.5) +
scale_x_date(labels = date_format("%m/%d")) +
theme(axis.text.x = element_text(angle=45))
meregd %>%
mutate(period = ifelse(date >= as.Date("2007-10-09") & date <= as.Date("2007-10-19"), "prior",
ifelse(date >= as.Date("2007-10-20") & date <= as.Date("2007-10-30"), "during",
ifelse(date >= as.Date("2007-10-31") & date <= as.Date("2007-11-10"), "after","other")))) %>%
filter(period != "other")
merged %>%
mutate(period = ifelse(date >= as.Date("2007-10-09") & date <= as.Date("2007-10-19"), "prior",
ifelse(date >= as.Date("2007-10-20") & date <= as.Date("2007-10-30"), "during",
ifelse(date >= as.Date("2007-10-31") & date <= as.Date("2007-11-10"), "after","other")))) %>%
filter(period != "other")
rm(list = ls())
library(tidyverse)
foo <- read.csv("~/Wildfires_kurt/PoissonTest/PoissonSandboxData.csv", stringsAsFactors = FALSE) %>%
rename(zip = bene_addr_zip,
date = svc_from_dt) %>%
gather(white,hispanic,black,native_am,asian_pi,other,missing, key = race, value = count) %>%
transform(race = factor(race, levels = c("white","hispanic","black","asian_pi","native_am","other","missing")),
date = as.Date(date))
zipCensus <- read.csv("~/Wildfires_kurt/raceByZip2010.csv", stringsAsFactors = FALSE)  %>%
rename(zip = Id2) %>%
gather(white,hispanic,black,native_am,asian_pi,other, key = race, value = population) %>%
transform(race = factor(race, levels = c("white","hispanic","black","asian_pi","native_am","other","missing"))) %>%
filter(zip %in% unique(foo$zip)) %>%
select(zip, race, population)
zipCensus %>% ggplot() + geom_bar(aes(x=zip, y=population, fill=race), stat="identity") +coord_flip()
merged <- left_join(foo, zipCensus) %>%
mutate(dailyRate = count/(population/10000))
# PM concentration by day
merged %>%
ggplot() +
geom_line(aes(x= date, y = pm_25)) + coord_flip()
#rates by race and day
merged %>%
filter(race !="other" & race !="missing") %>%
ggplot() +
geom_point(aes(x= date, y = dailyRate, color = race, group=race)) + coord_flip()
merged %>%
filter(race !="other" & race !="missing") %>%
ggplot() +
geom_boxplot(aes(x= date, y = count, color = race, group=zip)) +
geom_point(aes(x= date, y = pm_25/50, group=zip), size=0.1, alpha=0.2) +
facet_wrap(~ race) + guides(color=FALSE)
merged %>%
mutate(period = ifelse(date >= as.Date("2007-10-09") & date <= as.Date("2007-10-19"), "prior",
ifelse(date >= as.Date("2007-10-20") & date <= as.Date("2007-10-30"), "during",
ifelse(date >= as.Date("2007-10-31") & date <= as.Date("2007-11-10"), "after","other")))) %>%
filter(period != "other")
merged %>%
mutate(period = ifelse(date >= as.Date("2007-10-09") & date <= as.Date("2007-10-19"), "prior",
ifelse(date >= as.Date("2007-10-20") & date <= as.Date("2007-10-30"), "during",
ifelse(date >= as.Date("2007-10-31") & date <= as.Date("2007-11-10"), "after","other")))) %>%
filter(period != "other") %>%
group_by(race, period, zip) %>%
summarize(meanPM = mean(pm_25, na.rm=T),
totalCases = sum(count),
population = mean(population, na.rm=T))
merged %>%
mutate(period = ifelse(date >= as.Date("2007-10-09") & date <= as.Date("2007-10-19"), "prior",
ifelse(date >= as.Date("2007-10-20") & date <= as.Date("2007-10-30"), "during",
ifelse(date >= as.Date("2007-10-31") & date <= as.Date("2007-11-10"), "after","other")))) %>%
filter(period != "other") %>%
group_by(race, period, zip) %>%
summarize(meanPM = mean(pm_25, na.rm=T),
totalCases = sum(count),
population = mean(population, na.rm=T),
rate = totalCases/(population/10000))
merged %>%
mutate(period = ifelse(date >= as.Date("2007-10-09") & date <= as.Date("2007-10-19"), "prior",
ifelse(date >= as.Date("2007-10-20") & date <= as.Date("2007-10-30"), "during",
ifelse(date >= as.Date("2007-10-31") & date <= as.Date("2007-11-10"), "after","other")))) %>%
filter(period != "other") %>%
group_by(race, period, zip) %>%
summarize(meanPM = mean(pm_25, na.rm=T),
totalCases = sum(count),
population = mean(population, na.rm=T),
rate = totalCases/(population/10000)) %>%
ggplot() +
geom_boxplot(aes(x= period, y = rate, color = race, group=zip)) +
geom_point(aes(x= period, y = meanPM, group=zip), size=0.1, alpha=0.2) +
facet_wrap(~ race) + guides(color=FALSE)
merged %>%
mutate(period = ifelse(date >= as.Date("2007-10-09") & date <= as.Date("2007-10-19"), "prior",
ifelse(date >= as.Date("2007-10-20") & date <= as.Date("2007-10-30"), "during",
ifelse(date >= as.Date("2007-10-31") & date <= as.Date("2007-11-10"), "after","other")))) %>%
filter(period != "other") %>%
group_by(race, period, zip) %>%
summarize(meanPM = mean(pm_25, na.rm=T),
totalCases = sum(count),
population = mean(population, na.rm=T),
rate = totalCases/(population/10000)) %>%
ggplot() +
geom_boxplot(aes(x= period, y = rate, color = race, group=zip)) +
geom_point(aes(x= period, y = meanPM/50, group=zip), size=0.1, alpha=0.2) +
facet_wrap(~ race) + guides(color=FALSE)
merged %>%
mutate(period = ifelse(date >= as.Date("2007-10-09") & date <= as.Date("2007-10-19"), "prior",
ifelse(date >= as.Date("2007-10-20") & date <= as.Date("2007-10-30"), "during",
ifelse(date >= as.Date("2007-10-31") & date <= as.Date("2007-11-10"), "after","other")))) %>%
filter(period != "other") %>%
group_by(race, period, zip) %>%
summarize(meanPM = mean(pm_25, na.rm=T),
totalCases = sum(count),
population = mean(population, na.rm=T),
rate = totalCases/(population/10000)) %>%
ggplot() +
geom_boxplot(aes(x= period, y = rate, color = race, group=zip)) +
facet_wrap(~ race) + guides(color=FALSE)
merged %>%
mutate(period = ifelse(date >= as.Date("2007-10-09") & date <= as.Date("2007-10-19"), "prior",
ifelse(date >= as.Date("2007-10-20") & date <= as.Date("2007-10-30"), "during",
ifelse(date >= as.Date("2007-10-31") & date <= as.Date("2007-11-10"), "after","other")))) %>%
filter(period != "other") %>%
group_by(race, period, zip) %>%
summarize(meanPM = mean(pm_25, na.rm=T),
totalCases = sum(count),
population = mean(population, na.rm=T),
rate = totalCases/(population/10000)) %>%
ggplot() +
geom_point(aes(x= zip, y = rate, color = race)) +
facet_grid(period ~ race) + guides(color=FALSE)
merged %>%
mutate(period = ifelse(date >= as.Date("2007-10-09") & date <= as.Date("2007-10-19"), "prior",
ifelse(date >= as.Date("2007-10-20") & date <= as.Date("2007-10-30"), "during",
ifelse(date >= as.Date("2007-10-31") & date <= as.Date("2007-11-10"), "after","other")))) %>%
filter(period != "other") %>%
group_by(race, period, zip) %>%
summarize(meanPM = mean(pm_25, na.rm=T),
totalCases = sum(count),
population = mean(population, na.rm=T),
rate = totalCases/(population/10000)) %>%
ggplot() +
geom_bar(aes(x= race, y = rate, fill = period), stat="identity", position="dodge") +
facet_grid(~ zip) + guides(color=FALSE)
merged %>%
mutate(period = ifelse(date >= as.Date("2007-10-09") & date <= as.Date("2007-10-19"), "prior",
ifelse(date >= as.Date("2007-10-20") & date <= as.Date("2007-10-30"), "during",
ifelse(date >= as.Date("2007-10-31") & date <= as.Date("2007-11-10"), "after","other")))) %>%
filter(period != "other") %>%
group_by(race, period, zip) %>%
summarize(meanPM = mean(pm_25, na.rm=T),
totalCases = sum(count),
population = mean(population, na.rm=T),
rate = totalCases/(population/10000)) %>%
ggplot() +
geom_bar(aes(x= zip, y = rate, fill = period), stat="identity", position="dodge") +
facet_grid(~ race) + guides(color=FALSE) + coord_flip()
merged  %>%
filter(race !="other" & race !="missing") %>%
mutate(period = ifelse(date >= as.Date("2007-10-09") & date <= as.Date("2007-10-19"), "prior",
ifelse(date >= as.Date("2007-10-20") & date <= as.Date("2007-10-30"), "during",
ifelse(date >= as.Date("2007-10-31") & date <= as.Date("2007-11-10"), "after","other")))) %>%
filter(period != "other") %>%
group_by(race, period, zip) %>%
summarize(meanPM = mean(pm_25, na.rm=T),
totalCases = sum(count),
population = mean(population, na.rm=T),
rate = totalCases/(population/10000)) %>%
ggplot() +
geom_bar(aes(x= zip, y = rate, fill = period), stat="identity", position="dodge") +
facet_grid(~ race) + guides(color=FALSE) + coord_flip()
runApp('~/GitHub/CHVIr/CHVIz')
rm(list=ls())
library(tidyverse)
library(sf)
library(leaflet)
setwd(dir = "~/4thAssessment/maps/")
# work from the network
# setwd("//phitprlcsrvip04/OHEGroup/HCI/Data/CCHVI in one folder for web/CHVIcsvs/")
tracts <- st_read("~/CHVI_copy/data/shapefiles/census_tracts2010.shp") %>% st_transform(crs = 4326)
CES <-  read.csv("~/4thAssessment/maps/CES.csv", header=T) # download here
HPI <-  read.csv("~/4thAssessment/maps/HPI.csv", header=T)
# HPI <- read.csv(url("http://map.healthyplacesindex.org/export/csv?cols=hpi;healthcareaccess;insured;economic;employed;abovepoverty;income;education;inpreschool;inhighschool;bachelorsed;pollution;ozone;pm25;dieselpm;h20contam;housing;uncrowded;homeownership;ownsevere;rentsevere;houserepair;neighborhood;alcoffsale;retail;parkaccess;treecanopy;supermkts;transportation;automobile;commute;social;voting;twoparents;outcomes;disabled_pct;disabledmental_pct;disabledphysical_pct;leb;arthritis_pct;bphigh_pct;cancer_pct;casthma_pct;chd_pct;copd_pct;diabetes_pct;kidney_pct;mhlth_pct;obesity_pct;phlth_pct;stroke_pct;pedshurt_pct;asthmaer;heartattack;lbw_pct;risk;binge_pct;csmoking_pct;lpa_pct;ccexposures;heatdays;sealevel_pct;wildfire_pct;ccsocial;crime_rate;immigrant_pct;englishspeak_pct;elders_pct;children_pct;outdoors_pct;iod;gini_pct;gini_city_pct;ccadaptive;uhii;traffic_pct;aircon_pct;impervsurf_pct;transitaccess_pct;alconsale_pct;otherindices;lt80pct_mhi;hi_score;ces_hpi;ces30score;hpi2scorerace;other;voter16_pct;frm_pct;support;raceethnicity;asian_pct;black_pct;latino_pct;multiple_pct;nativeam_pct;other_pct;pacificisl_pct;white_pct;demographic"),
#                 header=T)
# CES tracts
CEStracts <- CES %>%
select(CensusTract, Population,County,CES3_Per,PopChar_Per, PollutionBurden_Per) %>%
mutate(ct10= as.character(paste0("0",CensusTract))) %>%
rename(CES = CES3_Per,
CES_Social = PopChar_Per,
CES_Pollution = PollutionBurden_Per,
CENSUS_TRACT = CensusTract)
# HPI tracts
HPItracts <- HPI %>%
select(geoid, pop2010,county_name,hpi2_pctile,economic_pctile, education_pctile, neighborhood_pctile,
social_pctile, housing_pctile, pollution_pctile, transportation_pctile, leb, hpi2scorerace_pctile) %>%
mutate(ct10= as.character(paste0("0",geoid))) %>%
rename(HPI = hpi2_pctile,
HPI_Economic = economic_pctile,
HPI_Education = education_pctile,
HPI_Housing = housing_pctile,
HPI_Pollution = pollution_pctile,
HPI_Social = social_pctile,
HPI_Transportation = transportation_pctile,
HPI_NbrHood = neighborhood_pctile,
HPI_Race = hpi2scorerace_pctile,
CENSUS_TRACT = geoid)
HPICES <- left_join(CEStracts, HPItracts) %>%
mutate(agreement= ifelse(HPI < 25 & CES > 75, "HPI and CES DAC",
ifelse(HPI > 25 & CES > 75, "CES DAC only",
ifelse(HPI < 25 & CES < 75, "HPI DAC only","not a DAC"))))
pal <- colorQuantile(
palette = "RdYlBu",n=4,reverse = TRUE,
domain = HPICES$CES)
pal2 <- colorQuantile(
palette = "RdYlBu", n=4,
domain = 0:100)
pal3 <- colorFactor(
palette = "RdYlBu", n=5,
domain = HPICES$agreement)
HPICEStracts <- tracts %>% left_join(HPICES)
HPICEStracts %>% select(CES, HPI, HPI_Race, agreement) %>% st_write(dsn = "roos_finalmaps.shp", delete_layer=TRUE)
HPICEStracts %>% select(CES, HPI, agreement) %>%
leaflet()  %>% addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(color = "#444444", weight = 1, fillOpacity = 0.6,
fillColor = ~pal(CES), group = "CalEnviroScreen 3.0") %>%
addPolygons(color = "#444444", weight = 1, fillOpacity = 0.6,
fillColor = ~pal2(HPI), group = "Healthy Places Index") %>%
addPolygons(color = "#444444", weight = 1, fillOpacity = 0.6,
fillColor = ~pal3(agreement), group = "Agreement") %>%
addLayersControl(
baseGroups = c("CalEnviroScreen 3.0", "Healthy Places Index", "Agreement"),
options = layersControlOptions(collapsed = FALSE)
) %>%
addLegend(pal = pal, values = ~CES, opacity = 1, title = "CES percentile") %>%
addLegend(pal = pal2, values = ~HPI, opacity = 1, title = "HPI percentile") %>%
addLegend(pal = pal3, values = ~agreement, opacity = 1, title = "Agreement")
pal
pal
View(pal)
View(pal)
pal(HPICEStracts$HPI)
library(Hmisc)
runApp('~/GitHub/CHVIr/CHVIz')
