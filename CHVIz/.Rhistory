". The state average is ", round(average(),1)),
group="State Quintiles")  %>%
addLayersControl(
baseGroups = c("Tract Quintiles", "State Quintiles"),
options = layersControlOptions(collapsed = TRUE)
) %>%
addLegend("bottomleft",
pal = pal,
values = ~ mapTemp$est,
opacity = .4,
title = input$ind
)
mapTemp <- tracts %>%
filter(COUNTYFI_1 == selectedFIPS) %>%
left_join(tractData)
pal <- colorQuantile(
palette = "RdYlBu",
n = 5,
reverse = TRUE,
domain =  tractData$est
)
mapTemp %>%
leaflet()  %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
color = "#444444",
weight = 1,
smoothFactor = 0.1,
fillOpacity = 0.6,
fillColor = ~ pal(est),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
popup = paste0("This is tract ", mapTemp$ct10, " in ",mapTemp$county," County. The ",mapTemp$def," in this tract is ",
round(mapTemp$est,1),". The county average is ", round(mean(mapTemp$est, na.rm=T),1),
". The state average is ", round(average(),1)),
group="Tract Quintiles") %>%
addPolygons(
color = "#444444",
weight = 1,
smoothFactor = 0.1,
fillOpacity = 0.6,
fillColor = ~ pal(est),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
popup = paste0("This is tract ", mapTemp$ct10, " in ",mapTemp$county," County. The ",mapTemp$def," in this tract is ",
round(mapTemp$est,1),". The county average is ", round(mean(mapTemp$est, na.rm=T),1),
". The state average is ", round(average(),1)),
group="State Quintiles")  %>%
addLayersControl(
baseGroups = c("Tract Quintiles", "State Quintiles"),
options = layersControlOptions(collapsed = TRUE)
) %>%
addLegend("bottomleft",
pal = pal,
values = ~ mapTemp$est,
opacity = .4,
title = input$ind
)
color = "#444444",
weight = 1,
smoothFactor = 0.1,
fillOpacity = 0.6,
fillColor = ~ pal(est),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
popup = paste0("This is tract ", mapTemp$ct10, " in ",mapTemp$county," County. The ",mapTemp$def," in this tract is ",
round(mapTemp$est,1),". The county average is ", round(mean(mapTemp$est, na.rm=T),1),
". The state average is ", round(average,1)),
group="Tract Quintiles") %>%
addPolygons(
mapTemp %>%
leaflet()  %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
color = "#444444",
weight = 1,
smoothFactor = 0.1,
fillOpacity = 0.6,
fillColor = ~ pal(est),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
popup = paste0("This is tract ", mapTemp$ct10, " in ",mapTemp$county," County. The ",mapTemp$def," in this tract is ",
round(mapTemp$est,1),". The county average is ", round(mean(mapTemp$est, na.rm=T),1),
". The state average is ", round(average,1)),
group="Tract Quintiles") %>%
addPolygons(
color = "#444444",
weight = 1,
smoothFactor = 0.1,
fillOpacity = 0.6,
fillColor = ~ pal(est),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
popup = paste0("This is tract ", mapTemp$ct10, " in ",mapTemp$county," County. The ",mapTemp$def," in this tract is ",
round(mapTemp$est,1),". The county average is ", round(mean(mapTemp$est, na.rm=T),1),
". The state average is ", round(average,1)),
group="State Quintiles")  %>%
addLayersControl(
baseGroups = c("Tract Quintiles", "State Quintiles"),
options = layersControlOptions(collapsed = TRUE)
) %>%
addLegend("bottomleft",
pal = pal,
values = ~ mapTemp$est,
opacity = .4,
title = input$ind
)
mapTemp %>%
leaflet()  %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
color = "#444444",
weight = 1,
smoothFactor = 0.1,
fillOpacity = 0.6,
fillColor = ~ pal(est),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
group="Tract Quintiles") %>%
addPolygons(
color = "#444444",
weight = 1,
smoothFactor = 0.1,
fillOpacity = 0.6,
fillColor = ~ pal(est),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
group="State Quintiles")  %>%
addLayersControl(
baseGroups = c("Tract Quintiles", "State Quintiles"),
options = layersControlOptions(collapsed = TRUE)
) %>%
addLegend("bottomleft",
pal = pal,
values = ~ mapTemp$est,
opacity = .4,
title = input$ind
)
color = "#444444",
weight = 1,
smoothFactor = 0.1,
fillOpacity = 0.6,
fillColor = ~ pal(est),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
group="State Quintiles")  %>%
addLayersControl(
mapTemp %>%
leaflet()  %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
color = "#444444",
weight = 1,
smoothFactor = 0.1,
fillOpacity = 0.6,
fillColor = ~ pal(est),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
group="Tract Quintiles") %>%
addPolygons(
color = "#444444",
weight = 1,
smoothFactor = 0.1,
fillOpacity = 0.6,
fillColor = ~ pal(est),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
group="State Quintiles")  %>%
addLayersControl(
baseGroups = c("Tract Quintiles", "State Quintiles"),
options = layersControlOptions(collapsed = TRUE)
) %>%
addLegend("bottomleft",
pal = pal,
values = ~ mapTemp$est,
opacity = .4,
title = defTest
)
mapTemp %>%
leaflet()  %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
color = "#444444",
weight = 1,
smoothFactor = 0.1,
fillOpacity = 0.6,
fillColor = ~ pal(est),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
group="Tract Quintiles") %>%
addPolygons(
color = "#444444",
weight = 1,
smoothFactor = 0.1,
fillOpacity = 0.6,
fillColor = ~ pal(est),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
group="State Quintiles")  %>%
addLayersControl(
baseGroups = c("Tract Quintiles", "State Quintiles"),
options = layersControlOptions(collapsed = TRUE)
) %>%
addLegend("bottomleft",
pal = pal,
values = ~ mapTemp$est,
opacity = .4,
title = defTest
)
tractData <- CHVItracts %>%
filter(def == defTest & strata %in% c("Overall","ViolentCrime","total","2006-2010","2009-2013","All Non-English","none", "population-weighted"))  %>%
mutate(ct10 = as.character(paste0('0',ct10)))
averages <- CHVIdata %>%
group_by(def, ind, strata) %>%
summarise(stateAverage = mean(est, na.rm=T))
selectedFIPS <- as.character(paste0("0",CHVIdata$COUNTYFI_1[CHVIdata$county == county][1]))
average <-   as.numeric({averages %>% filter(def == defTest & strata == "none") %>%
ungroup() %>% select(stateAverage)}[1])
mapTemp <- tracts %>%
filter(COUNTYFI_1 == selectedFIPS) %>%
left_join(tractData)
pal <- colorQuantile(
palette = "RdYlBu",
n = 5,
reverse = TRUE,
domain =  tractData$est
)
mapTemp %>%
leaflet()  %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
color = "#444444",
weight = 1,
smoothFactor = 0.1,
fillOpacity = 0.6,
fillColor = ~ pal(est),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
group="Tract Quintiles") %>%
addPolygons(
color = "#444444",
weight = 1,
smoothFactor = 0.1,
fillOpacity = 0.6,
fillColor = ~ pal(est),
highlightOptions = highlightOptions(color = "white", weight = 2,
bringToFront = TRUE),
group="State Quintiles")  %>%
addLayersControl(
baseGroups = c("Tract Quintiles", "State Quintiles"),
options = layersControlOptions(collapsed = TRUE)
) %>%
addLegend("bottomleft",
pal = pal,
values = ~ mapTemp$est,
opacity = .4,
title = defTest
)
mapTemp
tracts
CHVItracts
View(tractData)
tractData <- CHVItracts %>%
filter(def == defTest & strata %in% c("Overall","ViolentCrime","total","2006-2010","2009-2013","All Non-English","none", "population-weighted"))  %>%
mutate(ct10 = as.character(paste0('0',ct10)))
averages <- CHVIdata %>%
group_by(def, ind, strata) %>%
summarise(stateAverage = mean(est, na.rm=T))
View(tractData)
View(tracts)
tracts
selectedFIPS
runApp('GitHub/CHVIr/CHVIz')
foo <- {CHVIdata %>%
filter(def  == defTest & strata %in% c("2085", 2085, "none") & race == "Total") %>%
mutate(expTer = ntile(est, 3)) %>%
select(county, climReg, COUNTYFI_1, def, est, expTer) %>%
spread(key = def, value = est)
} %>% left_join({
CHVIdata %>%
filter(def  == defTest2 & strata %in% c("Overall","ViolentCrime","total","2006-2010","2009-2013","All Non-English","none", "population-weighted") & race =="Total") %>%
mutate(sensTer = ntile(est, 3)) %>%
select(county, climReg, COUNTYFI_1, def, est, sensTer) %>%
spread(key = def, value = est) %>%
left_join({
CHVIdata %>%
filter(def  == "Percent of population aged 65 years or older" & race == "Total") %>%
select(county, denmntr)
}) %>%
rename(Population = denmntr)
}) %>%
mutate(Population = as.numeric(as.character(Population)),
vulnerability = factor(ifelse(expTer == 1 & sensTer == 1, "Low Exposure, Low Sensitivity",
ifelse(expTer == 1 & sensTer == 2, "Low Exposure, Medium Sensitivity",
ifelse(expTer == 1 & sensTer == 2, "Low Exposure, High Sensitivity",
ifelse(expTer == 2 & sensTer == 1, "Medium Exposure, Low Sensitivity",
ifelse(expTer == 3 & sensTer == 1, "High Exposure, Low Sensitivity",
ifelse(expTer == 2 & sensTer == 2, "Medium Exposure, Medium Sensitivity",
ifelse(expTer == 2 & sensTer == 3, "Medium Exposure, High Sensitivity",
ifelse(expTer == 3 & sensTer == 2, "High Exposure, Medium Sensitivity","High Exposure, High Sensitivity"
)))))))), levels = c("Low Exposure, Low Sensitivity",
"Low Exposure, Medium Sensitivity",
"Medium Exposure, Low Sensitivity",
"Medium Exposure, Medium Sensitivity",
"High Exposure, Low Sensitivity",
"Low Exposure, High Sensitivity",
"High Exposure, Medium Sensitivity",
"Medium Exposure, High Sensitivity",
"High Exposure, High Sensitivity"
)),
sign = factor(ifelse(expTer == 1 & sensTer == 1, "Low Exposure, Low Sensitivity",
ifelse(expTer == 1 & sensTer == 2, "Low Exposure, Medium Sensitivity",
ifelse(expTer == 1 & sensTer == 2, "Low Exposure, High Sensitivity",
ifelse(expTer == 2 & sensTer == 1, "Medium Exposure, Low Sensitivity",
ifelse(expTer == 3 & sensTer == 1, "High Exposure, Low Sensitivity",
ifelse(expTer == 2 & sensTer == 2, "Medium Exposure, Medium Sensitivity",
ifelse(expTer == 2 & sensTer == 3, "Medium Exposure, High Sensitivity",
ifelse(expTer == 3 & sensTer == 2, "High Exposure, Medium Sensitivity","High Exposure, High Sensitivity"
)))))))), levels = c("Low Exposure, Low Sensitivity",
"Low Exposure, Medium Sensitivity",
"Medium Exposure, Low Sensitivity",
"Medium Exposure, Medium Sensitivity",
"High Exposure, Low Sensitivity",
"Low Exposure, High Sensitivity",
"High Exposure, Medium Sensitivity",
"Medium Exposure, High Sensitivity",
"High Exposure, High Sensitivity"
)),
size = ntile(Population,29)
)
View(foo)
foo <- {CHVIdata %>%
filter(def  == defTest & strata %in% c("2085", 2085, "none") & race == "Total") %>%
mutate(expTer = ntile(est, 3)) %>%
select(county, climReg, COUNTYFI_1, def, est, expTer) %>%
spread(key = def, value = est)
} %>% left_join({
CHVIdata %>%
filter(def  == defTest2 & strata %in% c("Overall","ViolentCrime","total","2006-2010","2009-2013","All Non-English","none", "population-weighted") & race =="Total") %>%
mutate(sensTer = ntile(est, 3)) %>%
select(county, climReg, COUNTYFI_1, def, est, sensTer) %>%
spread(key = def, value = est) %>%
left_join({
CHVIdata %>%
filter(def  == "Percent of population aged 65 years or older" & race == "Total") %>%
select(county, denmntr)
}) %>%
rename(Population = denmntr)
}) %>%
mutate(Population = as.numeric(as.character(Population)),
vulnerability = factor(ifelse(expTer == 1 & sensTer == 1, "Low Exposure, Low Sensitivity",
ifelse(expTer == 1 & sensTer == 2, "Low Exposure, Medium Sensitivity",
ifelse(expTer == 1 & sensTer == 3, "Low Exposure, High Sensitivity",
ifelse(expTer == 2 & sensTer == 1, "Medium Exposure, Low Sensitivity",
ifelse(expTer == 3 & sensTer == 1, "High Exposure, Low Sensitivity",
ifelse(expTer == 2 & sensTer == 2, "Medium Exposure, Medium Sensitivity",
ifelse(expTer == 2 & sensTer == 3, "Medium Exposure, High Sensitivity",
ifelse(expTer == 3 & sensTer == 2, "High Exposure, Medium Sensitivity","High Exposure, High Sensitivity"
)))))))), levels = c("Low Exposure, Low Sensitivity",
"Low Exposure, Medium Sensitivity",
"Medium Exposure, Low Sensitivity",
"Medium Exposure, Medium Sensitivity",
"High Exposure, Low Sensitivity",
"Low Exposure, High Sensitivity",
"High Exposure, Medium Sensitivity",
"Medium Exposure, High Sensitivity",
"High Exposure, High Sensitivity"
)),
sign = ifelse(expTer == 1 & sensTer == 1, "rgba(14,137,68, 0.5)",
ifelse(expTer == 1 & sensTer == 2,"rgba(205,225,141, 0.7)",
ifelse(expTer == 1 & sensTer == 3, "rgba(239,119,34, 0.8)",
ifelse(expTer == 2 & sensTer == 1, "rgba(155,200,213,.7)",
ifelse(expTer == 3 & sensTer == 1, "rgba(92,81,159,0.8)",
ifelse(expTer == 2 & sensTer == 2, "rgba(232,232,232,0.7)",
ifelse(expTer == 2 & sensTer == 3, "rgba(245,150,164,0.9)",
ifelse(expTer == 3 & sensTer == 2, "rgba(205,156,197,0.9)","rgba(35,31,32,1)"
)))))))),
size = ntile(Population,29)
)
runApp('GitHub/CHVIr/CHVIz')
triple <- {
foo <- {CHVIdata %>%
filter(def  == defTest & strata %in% c("2085", 2085, "none") & race == "Total") %>%
mutate(expTer = ntile(est, 3)) %>%
select(county, climReg, COUNTYFI_1, def, est, expTer) %>%
spread(key = def, value = est)
} %>% left_join({
CHVIdata %>%
filter(def  == defTest2 & strata %in% c("Overall","ViolentCrime","total","2006-2010","2009-2013","All Non-English","none", "population-weighted") & race =="Total") %>%
mutate(sensTer = ntile(est, 3)) %>%
select(county, climReg, COUNTYFI_1, def, est, sensTer) %>%
spread(key = def, value = est) %>%
left_join({
CHVIdata %>%
filter(def  == "Percent of population aged 65 years or older" & race == "Total") %>%
select(county, denmntr)
}) %>%
rename(Population = denmntr)
}) %>%
mutate(Population = as.numeric(as.character(Population)),
vulnerability = factor(ifelse(expTer == 1 & sensTer == 1, "Low Exposure, Low Sensitivity",
ifelse(expTer == 1 & sensTer == 2, "Low Exposure, Medium Sensitivity",
ifelse(expTer == 1 & sensTer == 3, "Low Exposure, High Sensitivity",
ifelse(expTer == 2 & sensTer == 1, "Medium Exposure, Low Sensitivity",
ifelse(expTer == 3 & sensTer == 1, "High Exposure, Low Sensitivity",
ifelse(expTer == 2 & sensTer == 2, "Medium Exposure, Medium Sensitivity",
ifelse(expTer == 2 & sensTer == 3, "Medium Exposure, High Sensitivity",
ifelse(expTer == 3 & sensTer == 2, "High Exposure, Medium Sensitivity","High Exposure, High Sensitivity"
)))))))), levels = c("Low Exposure, Low Sensitivity",
"Low Exposure, Medium Sensitivity",
"Medium Exposure, Low Sensitivity",
"Medium Exposure, Medium Sensitivity",
"High Exposure, Low Sensitivity",
"Low Exposure, High Sensitivity",
"High Exposure, Medium Sensitivity",
"Medium Exposure, High Sensitivity",
"High Exposure, High Sensitivity"
)),
sign = ifelse(expTer == 1 & sensTer == 1, "rgba(14,137,68, 0.5)",
ifelse(expTer == 1 & sensTer == 2,"rgba(205,225,141, 0.7)",
ifelse(expTer == 1 & sensTer == 3, "rgba(239,119,34, 0.8)",
ifelse(expTer == 2 & sensTer == 1, "rgba(155,200,213,.7)",
ifelse(expTer == 3 & sensTer == 1, "rgba(92,81,159,0.8)",
ifelse(expTer == 2 & sensTer == 2, "rgba(232,232,232,0.7)",
ifelse(expTer == 2 & sensTer == 3, "rgba(245,150,164,0.9)",
ifelse(expTer == 3 & sensTer == 2, "rgba(205,156,197,0.9)","rgba(35,31,32,1)"
)))))))),
size = ntile(Population,29)
)
foo <- na.omit(foo)
}
View(triple)
runApp('GitHub/CHVIr/CHVIz')
View(triple)
runApp('GitHub/CHVIr/CHVIz')
shiny::runApp('GitHub/wildfires/kurtWFpaper/kurtPaper')
runApp('GitHub/wildfires/kurtWFpaper/kurtPaper')
runApp('GitHub/wildfires/kurtWFpaper/kurtPaper')
runApp('GitHub/wildfires/kurtWFpaper/kurtPaper')
foo <- read.csv("~/Wildfires_kurt/PoissonTest/PoissonSandboxData.csv")
runApp('GitHub/wildfires/kurtWFpaper/kurtPaper')
runApp('GitHub/wildfires/kurtWFpaper/kurtPaper')
runApp('GitHub/wildfires/kurtWFpaper/kurtPaper')
runApp('GitHub/wildfires/kurtWFpaper/kurtPaper')
rm(list = ls())
library(tidyverse)
foo <- read.csv("~/Wildfires_kurt/PoissonTest/PoissonSandboxData.csv", stringsAsFactors = FALSE) %>%
rename(zip = bene_addr_zip,
date = svc_from_dt) %>%
gather(white,hispanic,black,native_am,asian_pi,other,missing, key = race, value = count) %>%
transform(race = factor(race, levels = c("white","hispanic","black","asian_pi","native_am","other","missing")),
date = as.Date(date))
zipCensus <- read.csv("~/Wildfires_kurt/raceByZip2010.csv", stringsAsFactors = FALSE)  %>%
rename(zip = Id2) %>%
gather(white,hispanic,black,native_am,asian_pi,other, key = race, value = population) %>%
transform(race = factor(race, levels = c("white","hispanic","black","asian_pi","native_am","other","missing"))) %>%
filter(zip %in% unique(foo$zip)) %>%
select(zip, race, population)
zipCensus %>% ggplot() + geom_bar(aes(x=zip, y=population, fill=race), stat="identity") +coord_flip()
merged <- left_join(foo, zipCensus) %>%
mutate(dailyRate = count/(population/10000))
# PM concentration by day
merged %>%
ggplot() +
geom_line(aes(x= date, y = pm_25)) + coord_flip()
#rates by race and day
merged %>%
filter(race !="other" & race !="missing") %>%
ggplot() +
geom_point(aes(x= date, y = dailyRate, color = race, group=race)) + coord_flip()
merged %>%
filter(race !="other" & race !="missing") %>%
ggplot() +
geom_boxplot(aes(x= date, y = count, color = race, group=zip)) +
geom_point(aes(x= date, y = pm_25/50, group=zip), size=0.1, alpha=0.2) +
facet_wrap(~ race) + guides(color=FALSE)
# assign exposure periods and calculate rates
merged  %>%
filter(race !="other" & race !="missing") %>%
mutate(period = ifelse(date >= as.Date("2007-10-09") & date <= as.Date("2007-10-19"), "prior",
ifelse(date >= as.Date("2007-10-20") & date <= as.Date("2007-10-30"), "during",
ifelse(date >= as.Date("2007-10-31") & date <= as.Date("2007-11-10"), "after","other")))) %>%
filter(period != "other") %>%
group_by(race, period, zip) %>%
summarize(meanPM = mean(pm_25, na.rm=T),
totalCases = sum(count),
population = mean(population, na.rm=T),
rate = totalCases/(population/10000)) %>%
ggplot() +
geom_bar(aes(x= zip, y = rate, fill = period), stat="identity", position="dodge") +
facet_grid(~ race) + guides(color=FALSE) + coord_flip()
# assign exposure periods and calculate rates
merged  %>%
filter(race !="other" & race !="missing") %>%
mutate(period = ifelse(date >= as.Date("2007-10-09") & date <= as.Date("2007-10-19"), "prior",
ifelse(date >= as.Date("2007-10-20") & date <= as.Date("2007-10-30"), "during",
ifelse(date >= as.Date("2007-10-31") & date <= as.Date("2007-11-10"), "after","other")))) %>%
filter(period != "other") %>%
group_by(race, period, zip) %>%
summarize(meanPM = mean(pm_25, na.rm=T),
totalCases = sum(count),
population = mean(population, na.rm=T),
rate = totalCases/(population/10000)) %>%
select(race, zip, period, rate) %>%
spread(key = period, value = rate) %>%
mutate(RRduring = ifelse(prior == 0, during/0.1, during/prior),
RRafter = ifelse(prior == 0, after/0.1, after/prior)
) %>%
ggplot() +
geom_bar(aes(x= zip, y = RRafter), stat="identity", position="dodge") +
facet_grid(~ race) + guides(color=FALSE) + coord_flip()
shiny::runApp('GitHub/CHVIr/CHVIz')
